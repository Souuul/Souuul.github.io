I"W,<h2 id="pandas---2">Pandas - 2</h2>

<p>Pandas - 1에서는 전반적인 Pandas의 활용에 대하여 알아보았습니다. 이번시간에는 본격적으로 좀더 자세하게 알아보도록 하겠습니다.</p>

<p>Database안에 Table을 사용하는 방법이 크게 2가지가 있습니다.</p>

<ol>
  <li>Django에서 사용했던 ORM방식 ( Model 을 이용해서 Table을 사용하는 방법)
 =&gt; SQL이라고 불리는 Database 언어를 몰라도 Table을 사용할 수 있습니다.</li>
  <li>일반적으로 SQL 구문을 이용해서 Database안의 Table을 사용합니다.
 =&gt; SQL 구문을 알아야 table에서 내가 원하는 데이터를 추출할 수 있습니다.</li>
</ol>

<p>그렇다면 간단하게 SQL 구문을 알아보도록 하겠습니다.</p>

<h3 id="sql-문법">SQL 문법</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pymysql.cursors</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c1"># pymysql이라는 module을 이용해서 데이터 베이스에 연결
</span>
<span class="n">conn</span> <span class="o">=</span> <span class="n">pymysql</span><span class="p">.</span><span class="n">connect</span><span class="p">(</span><span class="n">host</span><span class="o">=</span> <span class="s">'localhost'</span><span class="p">,</span>
                      <span class="n">user</span> <span class="o">=</span> <span class="s">'data'</span><span class="p">,</span>
                      <span class="n">password</span> <span class="o">=</span> <span class="s">'data'</span><span class="p">,</span>
                      <span class="n">db</span><span class="o">=</span><span class="s">'library'</span><span class="p">,</span>
                      <span class="n">charset</span><span class="o">=</span><span class="s">'utf8'</span><span class="p">)</span>

<span class="c1"># 데이터베이스에 접속되면 SQL문을 실행시켜서 Database로 부터
# 데이터를 가져온 후 DataFrame으로 생성
# sql은 대소문자를 구분하지 않음
# WHERE 조건
</span>
<span class="c1"># sql = 'SELECT btitle, bprice FROM book WHERE bprice &gt;30000'
</span>
<span class="c1"># 책 제목에 특정 키워드가 들어가 있는 책들만 골라오고 싶어요! (패턴매칭)
# sql = 'SELECT btitle, bprice FROM book WHERE btitle like "%java%"'
</span><span class="n">sql</span> <span class="o">=</span> <span class="s">'SELECT btitle, bprice FROM book WHERE btitle like "%여행%"'</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_sql</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">con</span> <span class="o">=</span> <span class="n">conn</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div></div>

<p align="center"><img src="../../assets/image/2020-09-13_22-54-13.png" alt="2020-09-13_22-54-13" style="zoom:50%;" /></p>

<h3 id="json-file-로-저장하기">JSON FILE 로 저장하기</h3>

<p>Database나 CSV파일로부터 데이터를 읽어들여서 DataFrame으로 만들어 보았습니다. 이렇게 만든 DataFrame을 JSON으로 저장할 수 있습니다. JSON 파일로 저장할 때 <u>4가지</u> 방식이 있어요!! Database안의 book table에서 원하는 내용의 데이터를 가져온 후 DataFrame으로 만들어서  JSON 파일로 저장해 보겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pymysql.cursors</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">conn</span> <span class="o">=</span> <span class="n">pymysql</span><span class="p">.</span><span class="n">connect</span><span class="p">(</span><span class="n">host</span><span class="o">=</span> <span class="s">'localhost'</span><span class="p">,</span>
                      <span class="n">user</span> <span class="o">=</span> <span class="s">'data'</span><span class="p">,</span>
                      <span class="n">password</span> <span class="o">=</span> <span class="s">'data'</span><span class="p">,</span>
                      <span class="n">db</span><span class="o">=</span><span class="s">'library'</span><span class="p">,</span>
                      <span class="n">charset</span><span class="o">=</span><span class="s">'utf8'</span><span class="p">)</span>

<span class="n">sql</span> <span class="o">=</span> <span class="s">'SELECT btitle,bauthor, bprice FROM book WHERE btitle like "%여행%"'</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_sql</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">con</span> <span class="o">=</span> <span class="n">conn</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c1"># DataFrame을 json파일로 저장할 때 총 4가지 서로 다른 형식이 존재.
# Unicode로 파일을 생성한 후 데이터를 저장해야 한글이 정상 처리가 되요!
# 파일을 저장할 폴더는 미리 생성이 되어 있어야 합니다.!!
</span>
<span class="c1"># with : 일반적으로 파일 처리할 때 순서는 파일열기 - 내용쓰기 - 파일닫기 이순서...
#        with 구문을 이용하면 resource의 close처리(해제처리)가 자동으로 이루어져요!
</span><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/json/books_columns.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="p">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span> <span class="o">=</span> <span class="s">'columns'</span><span class="p">)</span>
    <span class="c1"># orient = columns로 설정하면 df의 column이 json의 key값으로 들어가요.
</span>    
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/json/books_records.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="p">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span> <span class="o">=</span> <span class="s">'records'</span><span class="p">)</span>
    <span class="c1"># orient = records로 설정하면 df의 column이 json의 key값으로 들어가고 dictionary 형태가 리스트 로 감싸져서 나타납니다.
</span>    
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/json/books_index.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="p">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span> <span class="o">=</span> <span class="s">'index'</span><span class="p">)</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/json/books_values.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="p">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span> <span class="o">=</span> <span class="s">'values'</span><span class="p">)</span>
</code></pre></div></div>

<p>상기 예제를 보면 총 4가지 방식으로 json파일로 생성하였는데,</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># JSON 파일을 읽어서 DataFrame을 생성해 보아요!!
</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="c1"># 우리가 가지고 있는 json 파일을 open 해서 json내용을 읽어 들어야 해요!
</span><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/json/books_columns.json'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">,</span> <span class="n">encoding</span> <span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">dict_books</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span> <span class="c1"># json 데이터를 python의 dictionary로 저장
</span><span class="k">print</span><span class="p">(</span><span class="n">dict_books</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">dict_books</span><span class="p">))</span> <span class="c1">#&lt;class 'dict'&gt;
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">dict_books</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div></div>

:ET