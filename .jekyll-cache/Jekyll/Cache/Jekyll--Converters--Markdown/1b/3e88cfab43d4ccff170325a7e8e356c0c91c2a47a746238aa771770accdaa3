I"<h2 id="model-save--load">Model Save &amp; Load</h2>

<p>이번시간에는 학습한 모델을 저장하고 불러와서 이용해보도록 하겠습니다. 지난시간에는 전의학습을 통해서 모델을 사용하는방법을 배웠다면 이번시간에는 중간에 종료된 모델을 다시 이어서 사용해보도록 하겠습니다.</p>

<h3 id="model-save">Model Save</h3>

<p>모델을 저장하는 방법에는 여러가지가 있지만 이번에는 keras의 model.save를 통해서 저장을 해보도록 하겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span><span class="p">.</span><span class="n">save</span><span class="p">(</span><span class="s">'경로/파일명.h5'</span><span class="p">)</span>    
</code></pre></div></div>

<p>먼저 학습을 진행하고 상기 명령어를 통하여 모델을 저장하면 h5 확장자의 파일이 지정된 경로에 저장됩니다.</p>

<h3 id="model-load">Model Load</h3>

<p>그렇다면 저장된 모델을 불러와 보도록 하겠습니다. 사용할 모델을 그대로 사용하시려면 불러온 모델에 변수를 할당하고 compile과 fit을 통하여 학습을 진행하시면 됩니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Model Load
</span><span class="n">model</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">models</span><span class="p">.</span><span class="n">load_model</span><span class="p">(</span><span class="s">'./Contest_model/contest_vgg.h5'</span><span class="p">)</span>

<span class="c1"># Training
</span><span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="n">RMSprop</span><span class="p">(</span><span class="n">learning_rate</span><span class="o">=</span><span class="mf">1e-4</span><span class="p">),</span>
              <span class="n">loss</span><span class="o">=</span><span class="s">'sparse_categorical_crossentropy'</span><span class="p">,</span>
              <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'sparse_categorical_accuracy'</span><span class="p">])</span>

<span class="n">epochs</span> <span class="o">=</span> <span class="mi">30</span>
<span class="n">history</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">fit_generator</span><span class="p">(</span>
    <span class="n">trainGen</span><span class="p">,</span> 
    <span class="n">epochs</span><span class="o">=</span><span class="n">epochs</span><span class="p">,</span>
    <span class="n">steps_per_epoch</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> 
    <span class="n">validation_data</span><span class="o">=</span><span class="n">validationGen</span><span class="p">,</span>
    <span class="n">validation_steps</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span>
    <span class="n">verbose</span><span class="o">=</span><span class="mi">1</span>
</code></pre></div></div>
:ET