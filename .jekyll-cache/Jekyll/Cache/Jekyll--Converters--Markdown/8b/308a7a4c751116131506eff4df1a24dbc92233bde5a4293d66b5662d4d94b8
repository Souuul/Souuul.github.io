I"LF<h2 id="pandas">Pandas</h2>

<p>오늘은 Pandas에 대하여 알아보겠습니다. Pandas는 ndarray(Numpy)를 기본 자료 구조로 사용하며 두개의 또 다른 자료구조<code class="language-plaintext highlighter-rouge">Series</code> 와 <code class="language-plaintext highlighter-rouge">DataFrame</code>를 이용합니다.</p>

<p>​</p>

<h3 id="series--dataframe">Series &amp; DataFrame</h3>

<p>Series : 동일한 데이터 타입의 복수개의 성분으로 구성되는 자료구조 ( 1차원 )</p>

<p>DataFrame : 엑셀에서 Table 과 같은 개념입니다. Database의 Table 이며 여러개의 Series로 구성됩니다. (2차원)</p>

<p>먼저 Pandas를 설치하고 시작하도록 하겠습니다. 하기 명령어를 터미널에서 입력하여 설치합니다.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$conda</span><span class="w"> </span><span class="nf">install</span><span class="w"> </span><span class="nx">pandas</span><span class="w">
</span></code></pre></div></div>

<p>설치가 완료되었다면 예제를 통하여 자세하게 알아보도록 하겠습니다.</p>

<h4 id="series">Series</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="c1"># ndarray
</span><span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">99</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">float64</span><span class="p">)</span>
<span class="c1"># print(arr)
</span>
<span class="c1"># pandas의 Series부터 만들어 보아요!
</span><span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">([</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">99</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">float64</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<span class="s">'''
0    -1.0
1     4.0
2     5.0
3    99.0
'''</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">values</span><span class="p">)</span> <span class="c1"># [-1.  4.  5. 99.] ndarray
</span><span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">index</span><span class="p">)</span> <span class="c1"># RangeIndex(start=0, stop=4, step=1) RangeIndex객체로 만들어짐
</span><span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">dtype</span><span class="p">)</span> <span class="c1"># float64
</span>
<span class="c1"># Series 생성 시 index를 별도로 지정할 수 있어요! =&gt; list, ndarray 로 지정할 수 있어요!
# 숫자 index는 기본으로 사용이 가능!!
# s = pd.Series([-1, 8, 5, 10 ], dtype=np.float64, index=['c','b','a','k'])
# print(s)
# '''
# c    -1.0
# b     8.0
# a     5.0
# k    10.0
# dtype: float64
# '''
# print(s[0]) # -1.0
# print(s['c']) # -1.0
</span>
<span class="c1"># 그러면 만약 index를 우리가 새로 지정해서 사용할 때
# 같은 index가 있으면 어떻게 되나요??
</span>
<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">([</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span> <span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">float64</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'c'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'k'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="s">'c'</span><span class="p">])</span>
<span class="s">'''
c   -1.0
c    5.0
dtype: float64
'''</span>

<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="s">'c'</span><span class="p">].</span><span class="n">values</span><span class="p">)</span> <span class="c1"># [-1.  5.]
</span>
<span class="c1"># Series에서 Slicing 도 가능할까요??
</span><span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">3</span><span class="p">])</span> <span class="c1"># Series로 결과 return
</span><span class="s">'''
b    8.0
c    5.0
dtype: float64
'''</span>

<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="s">'b'</span><span class="p">:</span><span class="s">'k'</span><span class="p">])</span> <span class="c1"># 앞 뒤 범위 둘다 포함
</span><span class="s">'''
dtype: float64
b     8.0
c     5.0
k    10.0
dtype: float64
'''</span>

<span class="c1"># Boolean Indexing
</span><span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">s</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">])</span> <span class="c1"># 짝수만 출력!!
</span><span class="s">'''
b     8.0
k    10.0
'''</span>

<span class="c1"># Fancy Indexing
</span><span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]])</span>
<span class="s">'''
c    -1.0
c     5.0
k    10.0
'''</span>

<span class="c1"># Numpy에서 했던 여러가지 작업들이 그대로 사용될 수 있어요 !!
</span><span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="nb">sum</span><span class="p">())</span> <span class="c1"># 22.0
</span>
<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

<span class="c1"># 새로운 데이터를 Series에 추가하려면 ??
</span><span class="n">s</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

<span class="n">s</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span> <span class="c1"># 5를 제외해도 6이 새로 생김
</span><span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<span class="s">'''
0      1
1      2
2      3
3      4
4    100
6    100
'''</span>

<span class="c1"># Series에서 특정 index를 삭제하려면 ??
</span><span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<span class="s">'''
0      1
1      2
3      4
4    100
6    100
dtype: int64
'''</span>

<span class="c1"># python의 dictionary를 이용해서 Series를 만들 수 있어요 !!
# dictionary의 key가 index가 되요!!
</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="n">my_dict</span> <span class="o">=</span> <span class="p">{</span><span class="s">'서울'</span> <span class="p">:</span> <span class="mi">1000</span><span class="p">,</span> <span class="s">'부산'</span> <span class="p">:</span> <span class="mi">2000</span> <span class="p">,</span> <span class="s">'제주'</span> <span class="p">:</span> <span class="mi">3000</span><span class="p">}</span>
<span class="n">s</span> <span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">my_dict</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<span class="s">'''
서울    1000
부산    2000
제주    3000
dtype: int64
'''</span>

<span class="n">s</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">'지역별 가격 데이터!!'</span> <span class="c1">#  Name: 지역별 가격 데이터!! // 시리즈의 이름을 부여가 가능
</span><span class="n">s</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">'지역명'</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<span class="s">'''
지역명
서울    1000
부산    2000
제주    3000
Name: 지역별 가격 데이터!!, dtype: int64
'''</span>
</code></pre></div></div>

<h4 id="dataframe">DataFrame</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Pandas DataFrame 생성 !!
# python의 dictionary를 가지고 만들어요!!
</span>
<span class="c1"># dictionary 로 DataFrame을 생성할때 데이터의 개수가 맞지 않으면 Error발생
# dictionary의 key가 DataFrame의 column으로 들어가게 됩니다.
# DataFrame은 Series의 집합으로 구성됩니다!! (각각의 column이 Series)
</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c1"># dictionary
</span><span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">'names'</span> <span class="p">:</span> <span class="p">[</span><span class="s">'홍길동'</span><span class="p">,</span> <span class="s">'아이유'</span><span class="p">,</span> <span class="s">'김연아'</span><span class="p">,</span> <span class="s">'강감찬'</span><span class="p">,</span> <span class="s">'이순신'</span><span class="p">],</span> 
        <span class="s">'year'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2015</span><span class="p">,</span> <span class="mi">2019</span><span class="p">,</span> <span class="mi">2020</span><span class="p">,</span> <span class="mi">2013</span><span class="p">,</span> <span class="mi">2017</span><span class="p">],</span>
        <span class="s">'points'</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.5</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.4</span><span class="p">,</span> <span class="mf">4.0</span><span class="p">]</span>
       <span class="p">}</span>

<span class="c1"># DataFrame을 생성
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="c1"># Data Frame 을 출력할떄는 display()를 이용해서 출력하느 것이 좋아요!
</span><span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="s">'''
names	year	points
0	홍길동	2015	3.5
1	아이유	2019	1.5
2	김연아	2020	2.0
3	강감찬	2013	3.4
4	이순신	2017	4.0
'''</span>

<span class="c1"># 기억해야 하는 속성을 알아보아요!!
</span><span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span> <span class="c1"># tuple 로 표현되구요! (5,3)
</span><span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">size</span><span class="p">)</span> <span class="c1"># 15 모든 요소의 개수
</span><span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">ndim</span><span class="p">)</span> <span class="c1"># 차원
</span>

<span class="c1"># DataFrame의 index, values, columns
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c1"># dictionary
</span><span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">'names'</span> <span class="p">:</span> <span class="p">[</span><span class="s">'홍길동'</span><span class="p">,</span> <span class="s">'아이유'</span><span class="p">,</span> <span class="s">'김연아'</span><span class="p">,</span> <span class="s">'강감찬'</span><span class="p">,</span> <span class="s">'이순신'</span><span class="p">],</span> 
        <span class="s">'year'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2015</span><span class="p">,</span> <span class="mi">2019</span><span class="p">,</span> <span class="mi">2020</span><span class="p">,</span> <span class="mi">2013</span><span class="p">,</span> <span class="mi">2017</span><span class="p">],</span>
        <span class="s">'points'</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.5</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.4</span><span class="p">,</span> <span class="mf">4.0</span><span class="p">]</span>
       <span class="p">}</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">)</span> <span class="c1"># RangeIndex(start=0, stop=5, step=1)
</span><span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">columns</span><span class="p">)</span> <span class="c1"># Index(['names', 'year', 'points'], dtype='object')
</span><span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">values</span><span class="p">)</span> <span class="c1"># 2차원 ndarray
</span><span class="s">'''
[['홍길동' 2015 3.5]
 ['아이유' 2019 1.5]
 ['김연아' 2020 2.0]
 ['강감찬' 2013 3.4]
 ['이순신' 2017 4.0]]
'''</span>

<span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">'학번'</span>
<span class="n">df</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">'학생정보'</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="s">'''
학생정보	names	year	points
학번			
0	홍길동	2015	3.5
1	아이유	2019	1.5
2	김연아	2020	2.0
3	강감찬	2013	3.4
4	이순신	2017	4.0
'''</span>

<span class="c1">### DataFrame 을 생성하는 다양한 방법 - 1. CSV 파일을 이용해서 DataFrame을 생성
</span>
<span class="c1"># CSV 파일을 하나 만들어서 DataFrame을 생성해 보아요!!
</span>
<span class="c1"># Student.csv
</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'./data/student.csv'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div></div>

:ET